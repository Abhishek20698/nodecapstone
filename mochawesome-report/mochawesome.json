{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-20T11:12:05.294Z",
    "end": "2023-11-20T11:12:11.502Z",
    "duration": 6208,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e45cb6e-8f0b-4880-aaba-caa9752f0476",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d5806cdf-bf08-4365-9ec2-b7bd04933f1e",
          "title": "API Routes",
          "fullFile": "D:\\backend-pr-sa-project\\youtube-subscribers\\__tests__\\test.js",
          "file": "\\__tests__\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API Routes\"",
              "fullTitle": "API Routes \"before all\" hook in \"API Routes\"",
              "timedOut": false,
              "duration": 5993,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Connect to a test database or perform any setup you need\n// This will depend on your testing environment and strategy\nawait mongoose.connect('mongodb+srv://ashahnawaz010:WkrqkxVLaDvEZnE7@cluster0.dzgsqgw.mongodb.net/', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});",
              "err": {},
              "uuid": "70e66484-bf42-45dc-8920-3d864c021151",
              "parentUUID": "d5806cdf-bf08-4365-9ec2-b7bd04933f1e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"API Routes\"",
              "fullTitle": "API Routes \"after all\" hook in \"API Routes\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Disconnect from the test database or perform any cleanup\nawait mongoose.disconnect();",
              "err": {},
              "uuid": "7e25e1e3-0f28-4b5c-894a-3ab307c2c412",
              "parentUUID": "d5806cdf-bf08-4365-9ec2-b7bd04933f1e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c35f7fd0-bb34-4d98-9191-467f9bc04952",
              "title": "GET /subscribers",
              "fullFile": "D:\\backend-pr-sa-project\\youtube-subscribers\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get all subscribers",
                  "fullTitle": "API Routes GET /subscribers should get all subscribers",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n  .get(\"/subscribers\")\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a(\"array\");\n    //res.body.length.should.be.eql(0); // Assuming no subscribers initially\n    done();\n  });",
                  "err": {},
                  "uuid": "a21e7c8b-18cb-4640-acc2-70612eda96ec",
                  "parentUUID": "c35f7fd0-bb34-4d98-9191-467f9bc04952",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a21e7c8b-18cb-4640-acc2-70612eda96ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c2404e4b-f533-4f0a-848b-c8c749af0732",
              "title": "GET /subscribers/names",
              "fullFile": "D:\\backend-pr-sa-project\\youtube-subscribers\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get subscribers by name and subscribedChannel",
                  "fullTitle": "API Routes GET /subscribers/names should get subscribers by name and subscribedChannel",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n  .get(\"/subscribers/names\")\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a(\"array\");\n    // Add more assertions based on your expected response\n    done();\n  });",
                  "err": {},
                  "uuid": "1fde4bad-35aa-49f9-b27a-4be36333eab7",
                  "parentUUID": "c2404e4b-f533-4f0a-848b-c8c749af0732",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fde4bad-35aa-49f9-b27a-4be36333eab7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7647009f-59e6-4675-be12-55f928039981",
              "title": "GET /subscribers/:id",
              "fullFile": "D:\\backend-pr-sa-project\\youtube-subscribers\\__tests__\\test.js",
              "file": "\\__tests__\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a subscriber by id",
                  "fullTitle": "API Routes GET /subscribers/:id should get a subscriber by id",
                  "timedOut": false,
                  "duration": 95,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newSubscriber = new Subscriber({\n  name: \"John Doe\",\n  subscribedChannel: \"Example Channel\",\n});\nnewSubscriber.save((err, subscriber) => {\n  chai.request(app)\n    .get(`/subscribers/${subscriber.id}`)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a(\"object\");\n      res.body.should.have.property(\"name\").eql(\"John Doe\");\n      // Add more assertions based on your expected response\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "9785c73a-47b9-415f-b5e3-9cee445d2130",
                  "parentUUID": "7647009f-59e6-4675-be12-55f928039981",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an error if subscriber is not found",
                  "fullTitle": "API Routes GET /subscribers/:id should return an error if subscriber is not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n  .get(\"/subscribers/invalid_id\")\n  .end((err, res) => {\n    res.should.have.status(400);\n    res.body.should.have.property(\"message\").eql(\"subscriber not found\");\n    done();\n  });",
                  "err": {},
                  "uuid": "2772e3a6-4596-4d19-abe2-df46f9c400a2",
                  "parentUUID": "7647009f-59e6-4675-be12-55f928039981",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9785c73a-47b9-415f-b5e3-9cee445d2130",
                "2772e3a6-4596-4d19-abe2-df46f9c400a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 99,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}